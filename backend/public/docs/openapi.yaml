openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/current-user:
    get:
      summary: "Get current user's info"
      operationId: getCurrentUsersInfo
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: radina555eee
                    email: dasdar44d@dada.com
                    gender: none
                    blocked: 0
                    role: client
                    address: 'Address 1'
                    phone-number: '08990889011'
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: radina555eee
                      email:
                        type: string
                        example: dasdar44d@dada.com
                      gender:
                        type: string
                        example: none
                      blocked:
                        type: integer
                        example: 0
                      role:
                        type: string
                        example: client
                      address:
                        type: string
                        example: 'Address 1'
                      phone-number:
                        type: string
                        example: '08990889011'
                  status:
                    type: integer
                    example: 200
      tags:
        - Endpoints
  /api/auth/logout:
    post:
      summary: 'Logout for user'
      operationId: logoutForUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
  /api/auth/change-password:
    post:
      summary: 'Change password for user'
      operationId: changePasswordForUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  status: 200
                properties:
                  data:
                    type: array
                    example: []
                  status:
                    type: integer
                    example: 200
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The current password is match with old password.'
                  errors:
                    current_password:
                      - 'The current password is match with old password.'
                properties:
                  message:
                    type: string
                    example: 'The current password is match with old password.'
                  errors:
                    type: object
                    properties:
                      current_password:
                        type: array
                        example:
                          - 'The current password is match with old password.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: aperiam
                new_password:
                  type: string
                  description: ''
                  example: soluta
                new_confirm_password:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: null
              required:
                - current_password
                - new_password
  /api/auth/update-user:
    post:
      summary: "Update user's info"
      operationId: updateUsersInfo
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  status: 200
                properties:
                  data:
                    type: array
                    example: []
                  status:
                    type: integer
                    example: 200
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected gender is invalid.'
                  errors:
                    gender:
                      - 'The selected gender is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected gender is invalid.'
                  errors:
                    type: object
                    properties:
                      gender:
                        type: array
                        example:
                          - 'The selected gender is invalid.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                gender:
                  type: string
                  description: 'Must be one of <code>female</code>, <code>male</code>, or <code>none</code>.'
                  example: male
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: deion27@example.net
                role:
                  type: string
                  description: 'Must be one of <code>client</code>, <code>organizer</code>, or <code>admin</code>.'
                  example: client
                address:
                  type: string
                  description: ''
                  example: sed
                phone_number:
                  type: string
                  description: ''
                  example: sed
  /api/events/types:
    get:
      summary: "Getting all event's types"
      operationId: gettingAllEventsTypes
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - wedding
                  - party
      tags:
        - Endpoints
  /api/events/organizers:
    get:
      summary: 'Getting all organizers'
      operationId: gettingAllOrganizers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    name: radina
                    email: dasda34e4d@dada.comh
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: radina
                      email:
                        type: string
                        example: dasda34e4d@dada.comh
                  status:
                    type: integer
                    example: 200
      tags:
        - Endpoints
  '/api/events/{eventType}/foodTypes':
    get:
      summary: 'Getting food types for event type'
      operationId: gettingFoodTypesForEventType
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - sea-food
                  - sweets
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  messages:
                    - 'Wrong event type'
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    example:
                      - 'Wrong event type'
                    items:
                      type: string
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: eventType
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/events/personal:
    get:
      summary: 'Getting all events that are not finished for user'
      operationId: gettingAllEventsThatAreNotFinishedForUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "[\n   {\n     \"id\": 1,\n     \"status\": \"requested-actions\",\n     \"name\": \"event 1\",\n     \"start\": null,\n     \"end\": null,\n     \"organizerName\": \"radina\",\n     \"organizerEmail\": \"radina@gmail.com\",\n     \"organizerId\": 1,\n     \"type\": \"wedding\",\n     \"moreInfo\": null,\n     \"description\": null,\n     \"accommodationNeeded\": 1,\n     \"place\": null,\n     \"pricePerGuest\": null,\n     \"priceForFood\": null,\n     \"foodDetails\": null,\n     \"priceForAccommodation\": null,\n     \"accommodationDetails\": null,\n     \"accommodationContact\": null,\n     \"accommodationWebsite\": null,\n     \"hasGivenFeedback\": false\n     \"isPublic\": false\n  }\n]"
      tags:
        - Endpoints
  /api/events/personal/all:
    get:
      summary: 'Getting all owned events'
      operationId: gettingAllOwnedEvents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    status: finished
                    name: '1'
                    organizerEmail: dasda34e4d@dada.comhee
                    clientEmail: dasda34e4d@dada.comhee
      tags:
        - Endpoints
  '/api/events/{id}/accept':
    post:
      summary: 'Accepting event'
      operationId: acceptingEvent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  messages:
                    - 'Non existing event'
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    example:
                      - 'Non existing event'
                    items:
                      type: string
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/events/{id}/reject':
    post:
      summary: 'Rejecting event'
      operationId: rejectingEvent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  messages:
                    - 'Non existing event'
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    example:
                      - 'Non existing event'
                    items:
                      type: string
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/events/{id}':
    get:
      summary: 'Getting event by id'
      operationId: gettingEventById
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    status: finished
                    name: radi
                    start: null
                    end: null
                    organizerName: radina
                    organizerEmail: radina@gmail.com
                    organizerId: 1
                    type: wedding
                    moreInfo: null
                    description: null
                    accommodationNeeded: 1
                    place: null
                    pricePerGuest: null
                    priceForFood: null
                    foodDetails: null
                    priceForAccommodation: null
                    accommodationDetails: null
                    accommodationContact: null
                    accommodationWebsite: null
                    hasGivenFeedback: false
                    isPublic: false
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: finished
                      name:
                        type: string
                        example: radi
                      start:
                        type: string
                        example: null
                      end:
                        type: string
                        example: null
                      organizerName:
                        type: string
                        example: radina
                      organizerEmail:
                        type: string
                        example: radina@gmail.com
                      organizerId:
                        type: integer
                        example: 1
                      type:
                        type: string
                        example: wedding
                      moreInfo:
                        type: string
                        example: null
                      description:
                        type: string
                        example: null
                      accommodationNeeded:
                        type: integer
                        example: 1
                      place:
                        type: string
                        example: null
                      pricePerGuest:
                        type: string
                        example: null
                      priceForFood:
                        type: string
                        example: null
                      foodDetails:
                        type: string
                        example: null
                      priceForAccommodation:
                        type: string
                        example: null
                      accommodationDetails:
                        type: string
                        example: null
                      accommodationContact:
                        type: string
                        example: null
                      accommodationWebsite:
                        type: string
                        example: null
                      hasGivenFeedback:
                        type: boolean
                        example: false
                      isPublic:
                        type: boolean
                        example: false
                  status:
                    type: integer
                    example: 200
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  messages:
                    - 'This event is private'
                properties:
                  success:
                    type: boolean
                    example: false
                  messages:
                    type: array
                    example:
                      - 'This event is private'
                    items:
                      type: string
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/events/{id}/comments':
    get:
      summary: 'Getting all comments for event'
      operationId: gettingAllCommentsForEvent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    userId: 1
                    userName: radina
                    content: 'really good :D'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/events/{id}/pics':
    get:
      summary: 'Getting all pics for event'
      operationId: gettingAllPicsForEvent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - 'https://picsum.photos/200/300'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/events/new:
    post:
      summary: 'Creates an event with basic data from client'
      operationId: createsAnEventWithBasicDataFromClient
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  status: 200
                properties:
                  data:
                    type: array
                    example: []
                  status:
                    type: integer
                    example: 200
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected type is invalid.'
                  errors:
                    type:
                      - 'The selected type is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The selected type is invalid.'
                  errors:
                    type: object
                    properties:
                      type:
                        type: array
                        example:
                          - 'The selected type is invalid.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organizerId:
                  type: integer
                  description: ''
                  example: 16
                name:
                  type: string
                  description: ''
                  example: ea
                start:
                  type: string
                  description: 'Must be a valid date. Must be a date before or equal to <code>end</code>.'
                  example: '1999-01-15'
                end:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start</code>.'
                  example: '2039-07-15'
                type:
                  type: string
                  description: 'Must be one of <code>wedding</code> or <code>party</code>.'
                  example: wedding
                isCatering:
                  type: boolean
                  description: ''
                  example: true
                foodType:
                  type: string
                  description: ''
                  example: vitae
                description:
                  type: string
                  description: ''
                  example: 'Repudiandae nisi itaque et unde porro molestiae eum.'
                guestsCount:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 21
                accommodationNeeded:
                  type: boolean
                  description: ''
                  example: true
              required:
                - organizerId
                - name
                - start
                - end
                - type
                - isCatering
                - foodType
                - description
                - guestsCount
                - accommodationNeeded
  /api/events:
    get:
      summary: 'Getting all finished events'
      operationId: gettingAllFinishedEvents
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    status: finished
                    name: '1'
                    type: '11'
                    place: null
                    clientEmail: client@gmail.com
                    isPublic: true
                    start: null
                    end: null
                    organizerName: radina
                    organizerEmail: radina@gmail.com
      tags:
        - Endpoints
      security: []
  /api/auth/login:
    post:
      summary: 'Log in the user'
      operationId: logInTheUser
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"access_token\": \"eyJ0eXA...\",\n \"token_type\": \"Bearer\",\n}"
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email & Password does not match with our record.'
                  errors:
                    email:
                      - 'Email & Password does not match with our record.'
                properties:
                  message:
                    type: string
                    example: 'Email & Password does not match with our record.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'Email & Password does not match with our record.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ebahringer@example.net
                password:
                  type: string
                  description: ''
                  example: quibusdam
              required:
                - email
                - password
      security: []
  /api/auth/register:
    post:
      summary: 'Create User'
      operationId: createUser
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"access_token\": \"eyJ0eXA...\",\n \"token_type\": \"Bearer\",\n}"
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected gender is invalid. (and 1 more error)'
                  errors:
                    gender:
                      - 'The selected gender is invalid.'
                    email:
                      - 'The email has already been taken.'
                properties:
                  message:
                    type: string
                    example: 'The selected gender is invalid. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      gender:
                        type: array
                        example:
                          - 'The selected gender is invalid.'
                        items:
                          type: string
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dignissimos
                gender:
                  type: string
                  description: 'Must be one of <code>female</code>, <code>male</code>, or <code>none</code>.'
                  example: none
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: buckridge.moses@example.net
                role:
                  type: string
                  description: 'Must be one of <code>client</code>, <code>organizer</code>, or <code>admin</code>.'
                  example: organizer
                password:
                  type: string
                  description: ''
                  example: dicta
                phone_number:
                  type: string
                  description: ''
                  example: id
                address:
                  type: string
                  description: ''
                  example: perferendis
              required:
                - name
                - gender
                - email
                - role
                - password
                - phone_number
                - address
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
